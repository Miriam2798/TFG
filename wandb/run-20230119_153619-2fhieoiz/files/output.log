Overriding model.yaml nc=80 with nc=3
                 from  n    params  module                                  arguments
  0                -1  1      7040  models.common.Conv                      [3, 64, 6, 2, 2]
  1                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  2                -1  3    156928  models.common.C3                        [128, 128, 3]
  3                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  4                -1  6   1118208  models.common.C3                        [256, 256, 6]
  5                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  6                -1  9   6433792  models.common.C3                        [512, 512, 9]
  7                -1  1   4720640  models.common.Conv                      [512, 1024, 3, 2]
  8                -1  3   9971712  models.common.C3                        [1024, 1024, 3]
  9                -1  1   2624512  models.common.SPPF                      [1024, 1024, 5]
 10                -1  1    525312  models.common.Conv                      [1024, 512, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  3   2757632  models.common.C3                        [1024, 512, 3, False]
 14                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  3    690688  models.common.C3                        [512, 256, 3, False]
 18                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  3   2495488  models.common.C3                        [512, 512, 3, False]
 21                -1  1   2360320  models.common.Conv                      [512, 512, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  3   9971712  models.common.C3                        [1024, 1024, 3, False]
 24      [17, 20, 23]  1     43080  models.yolo.Detect                      [3, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [256, 512, 1024]]
YOLOv5l summary: 368 layers, 46149064 parameters, 46149064 gradients, 108.3 GFLOPs
Transferred 79/613 items from yolov5m.pt
[34m[1mAMP: [39m[22mchecks failed ‚ùå, disabling Automatic Mixed Precision. See https://github.com/ultralytics/yolov5/issues/7908
[34m[1moptimizer:[39m[22m SGD(lr=0.01) with parameter groups 101 weight(decay=0.0), 104 weight(decay=0.0005), 104 bias
[34m[1mtrain: [39m[22mScanning '/home/usuaris/imatge/miriam.elbaz/workspace/Dataset/labels/train.cache' images and labels... 2097 found, 0 missing, 0 empty, 0 corrupt: 100%|##########| 2097/2097 [00:00<?, ?it/s]
[34m[1mval: [39m[22mScanning '/home/usuaris/imatge/miriam.elbaz/workspace/Dataset/labels/val.cache' images and labels... 262 found, 0 missing, 0 empty, 0 corrupt: 100%|##########| 262/262 [00:00<?, ?it/s]
/imatge/miriam.elbaz/venv/TFG/lib/python3.9/site-packages/torch/utils/data/dataloader.py:563: UserWarning: This DataLoader will create 8 worker processes in total. Our suggested max number of worker in current system is 4, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
[34m[1mAutoAnchor: [39m[22mERROR: CUDA error: no kernel image is available for execution on the device
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Traceback (most recent call last):
  File "/mnt/gpid07/imatge/miriam.elbaz/workspace/yolov5/train.py", line 630, in <module>
    main(opt)
  File "/mnt/gpid07/imatge/miriam.elbaz/workspace/yolov5/train.py", line 524, in main
    train(opt.hyp, opt, device, callbacks)
  File "/mnt/gpid07/imatge/miriam.elbaz/workspace/yolov5/train.py", line 222, in train
    model.half().float()  # pre-reduce anchor precision
  File "/imatge/miriam.elbaz/venv/TFG/lib/python3.9/site-packages/torch/nn/modules/module.py", line 785, in half
    return self._apply(lambda t: t.half() if t.is_floating_point() else t)
  File "/mnt/gpid07/imatge/miriam.elbaz/workspace/yolov5/models/yolo.py", line 155, in _apply
    self = super()._apply(fn)
  File "/imatge/miriam.elbaz/venv/TFG/lib/python3.9/site-packages/torch/nn/modules/module.py", line 579, in _apply
    module._apply(fn)
  File "/imatge/miriam.elbaz/venv/TFG/lib/python3.9/site-packages/torch/nn/modules/module.py", line 579, in _apply
    module._apply(fn)
  File "/imatge/miriam.elbaz/venv/TFG/lib/python3.9/site-packages/torch/nn/modules/module.py", line 579, in _apply
    module._apply(fn)
  File "/imatge/miriam.elbaz/venv/TFG/lib/python3.9/site-packages/torch/nn/modules/module.py", line 602, in _apply
    param_applied = fn(param)
  File "/imatge/miriam.elbaz/venv/TFG/lib/python3.9/site-packages/torch/nn/modules/module.py", line 785, in <lambda>
    return self._apply(lambda t: t.half() if t.is_floating_point() else t)
RuntimeError: CUDA error: no kernel image is available for execution on the device
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.